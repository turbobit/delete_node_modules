import os
import sys
import time
import shutil

def count_and_delete_node_modules(directory):
    node_modules_paths = []
    spinner = ['|', '/', '-', '\\']
    spinner_count = 0
    update_frequency = 1000  # 1000개 디렉토리마다 한 번씩만 업데이트
    
    print("Scanning for 'node_modules' folders, please wait...", end="")
    sys.stdout.flush()
    
    folder_counter = 0  # 폴더 카운팅을 위한 변수
    
    for root, dirs, files in os.walk(directory):
        for dir_name in dirs:
            if dir_name == 'node_modules':
                node_modules_path = os.path.join(root, dir_name)
                node_modules_paths.append(node_modules_path)
        
        folder_counter += 1
        # 애니메이션 및 스캔 폴더 수 업데이트
        if folder_counter % update_frequency == 0:
            print(f"\rScanning for 'node_modules' folders, please wait... {spinner[spinner_count % len(spinner)]} Folders scanned: {folder_counter}", end="")
            sys.stdout.flush()
            spinner_count += 1
        
    print("\r", end="")  # 줄 바꿈 처리
    
    node_modules_count = len(node_modules_paths)
    # 노드 모듈 폴더가 있는지 확인
    if node_modules_count == 0:
        print("No 'node_modules' folders found.")
        return

    print(f"Found {node_modules_count} 'node_modules' folders. Deleting now...")
    
    # 노드 모듈 폴더 삭제
    deleted_count = 0
    for node_modules_path in node_modules_paths:
        try:
            shutil.rmtree(node_modules_path)
            deleted_count += 1
            progress_percentage = (deleted_count / node_modules_count) * 100
            print(f"Deleted: {node_modules_path} ({deleted_count}/{node_modules_count}, {progress_percentage:.2f}%)")
        except FileNotFoundError:
            print(f"Warning: The path {node_modules_path} was not found. Continuing with remaining folders.")

    # 결과 요약
    print(f"Total 'node_modules' folders deleted: {deleted_count} of {node_modules_count}")

# 현재 폴더부터 시작하여 node_modules 폴더 삭제
current_directory = os.getcwd()
count_and_delete_node_modules(current_directory)
